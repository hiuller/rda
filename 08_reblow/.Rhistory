q()
install.packages(c("BradleyTerry2", "caret", "lme4", "Matrix", "mgcv", "Rcpp"))
install.package('genalg')
install.packages("genalg")
?cat
install.packages("nnet")
install.packages("neuralnet")
setwd("C:/Users/Public/Documents/RDataAnalysis/08_reblow")
rawData <- read.csv("qry_ressopro_global.csv", sep=";")
rawData <- read.csv("qry_ressopro_global.csv", sep=";");
labels(rawData);
names(rawData);
size(rawData)
length(rawData)
?length
nrow(rawData)
names(rawData)
rawData$DT_PRODC_OBTD_ACI
?max
max(rawData$DT_PRODC_OBTD_ACI)
class(rawData$DT_PRODC_OBTD_ACI)
?date
?As.date
?as.date
??date
max(as.Date(rawData$DT_PRODC_OBTD_ACI))
max(as.Date(rawData$DT_PRODC_OBTD_ACI, "dd/mm/yyyy"))
max(as.Date(rawData$DT_PRODC_OBTD_ACI, "%d/%m/%y"))
max(as.Date(rawData$DT_PRODC_OBTD_ACI, format="%d/%m/%y"))
max(as.Date(rawData$DT_PRODC_OBTD_ACI, format="dd/mm/yyyy"))
as.Date(rawData$DT_PRODC_OBTD_ACI, format="%d/%m/%y")
as.Date(rawData$DT_PRODC_OBTD_ACI[1], format="%d/%m/%y")
rawData$DT_PRODC_OBTD_ACI[1]
as.Date(rawData$DT_PRODC_OBTD_ACI[1], format="%d/%m/%Y")
max(as.Date(rawData$DT_PRODC_OBTD_ACI, format="%d/%m/%Y"))
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
?format
teste <- as.Date(rawData$DT_PRODC_OBTD_ACI[1], format="%d/%m/%Y")
teste
class(teste)
format(teste, format="%m")
rawData$mes <- format(as.Date(rawData$DT_PRODC_OBTD_ACI, format="%d/%m/%Y"), format="%m")
rawData$mes
table(rawData$mes)
clear
clearws
es
wa
rm
?rm
rm(list=ls())
?table
class(rawData$mes)
setwd("C:/Users/Public/Documents/RDataAnalysis/08_reblow");
rawData <- read.csv("qry_ressopro_global.csv", sep=";");
names(rawData);
rawData$mes <- format(as.Date(rawData$DT_PRODC_OBTD_ACI, format="%d/%m/%Y"), format="%m")
class(rawData$mes)
rawData$ressopro <- (rawData$VOL_RESS > 40)
summarize(rawData)
Summarize(rawData)
summary(rawData)
summary(rawData$ressopro)
summary(rawData$ressopro ~rawData$mes)
?tapply
tapply(rawData$ressopro, rawData%mes, sum)
tapply(rawData$ressopro, rawData$mes, sum)
?aggregate
tapply(rawData$ressopro, rawData$mes, sum)
tapply(rawData$ressopro, rawData$mes, count)
?sum
tapply(rawData$ressopro, rawData$mes, cnt)
tapply(rawData$ressopro, rawData$mes, sum)
table(rawData$mes)
a <- tapply(rawData$ressopro, rawData$mes, sum)
b <- table(rawData$mes)
class(a)
class(b)
a/b
install.packages("pandoc")
install.packages("pandocs")
rm(a, b)
names(rawData)
table(rawData$TP_CORR)
?transpose
??transpose
t(table(rawData$TP_CORR))
j <- table(rawData$TP_CORR)
j
j[1]
j[[1]]
j[[2]]
j[1,1]
j(1,1)
j
names(j)
j[]
j[,]
j[,:]
summary(j)
j
describe(j)
j
j[1]
j[[1]]
names(j)
j > 100
names(j>100)
names(j)[j>100]
incluir <- names(j)[j>100]
incluir
?subset
sub <- subset(rawData, subset=incluir)
sub <- subset(rawData, subset=rawData$TP_CORR == incluir)
?in
sub <- subset(rawData, subset=rawData$TP_CORR %in% incluir)
table(sub%TP_CORR)
table(sub$TP_CORR)
class(sub$TP_CORR)
table(as.character(sub$TP_CORR))
boxplot(sub$PERC_SUCATA~sub%TP_CORR)
?boxplot
boxplot(sub$PERC_SUCATA, subset=sub%TP_CORR)
boxplot(sub$PERC_SUCATA~sub$TP_CORR)
boxplot(sub$PERC_SUCATA~as.character(sub$TP_CORR))
plot(sub$PERC_SUCATA~as.character(sub$TP_CORR), pch=19, col='red')
plot(sub$PERC_SUCATA, pch=19, col='red')
points(sub$PERC_SUCATA~as.character(sub$TP_CORR), pch=19, col='red')
points(sub$PERC_SUCATA~as.character(sub$TP_CORR), pch=19, col='red', cex=1.2)
as.character(sub$TP_CORR)
as.numeric(sub$TP_CORR)
plot(sub$PERC_SUCATA ~ as.numeric(sub$TP_CORR), pch=19, col='red', cex=1.2)
plot(sub$PERC_SUCATA ~ jitter(as.numeric(sub$TP_CORR)), pch=19, col='red', cex=1.2)
table(as.numeric(sub$TP_CORR))
plot(sub$PERC_SUCATA ~ jitter(as.numeric(sub$TP_CORR)), at=c(1, 2, 3), pch=19, col='red', cex=1.2)
plot(sub$PERC_SUCATA ~ jitter(as.numeric(sub$TP_CORR)), pch=19, col='red', cex=1.2, xlab=NA)
plot(sub$PERC_SUCATA ~ jitter(as.numeric(sub$TP_CORR)), pch=19, col='red', cex=1.2, xlab=NA)
plot(sub$PERC_SUCATA ~ jitter(as.numeric(sub$TP_CORR)), pch=19, col='red', cex=1.2, xlab=NA)
plot(sub$PERC_SUCATA ~ jitter(as.numeric(sub$TP_CORR)), pch=19, col='red', cex=1.2, xaxt=NA)
plot(sub$PERC_SUCATA ~ jitter(as.numeric(sub$TP_CORR)), pch=19, col='red', cex=1.2, xaxt=NA)
plot(sub$PERC_SUCATA ~ jitter(as.numeric(sub$TP_CORR)), pch=19, col='red', cex=1.2, xaxt=NULL)
plot(sub$PERC_SUCATA ~ jitter(as.numeric(sub$TP_CORR)), pch=19, col='red', cex=1.2, xaxt=NA)
plot(sub$PERC_SUCATA ~ jitter(as.numeric(sub$TP_CORR)), pch=19, col='red', cex=1.2, axis=NA)
levels(sub$TP_CORR)
levels(sub$TP_CORR) <- incluir
?droplevels
droplevels(sub$TP_CORR)
plot(sub$PERC_SUCATA ~ jitter(as.numeric(sub$TP_CORR)), pch=19, col='red', cex=1.2, axis=NA)
sub$TP_CORR
sub$TP_CORR
sub$TP_CORR <- levels(sub$TP_CORR)
sub$TP_CORR
plot(sub$PERC_SUCATA ~ jitter(as.numeric(sub$TP_CORR)), pch=19, col='red', cex=1.2, axis=NA)
levels(sub$TP_CORR)
sub$TP_CORR
sub$TP_CORR <- as.factor(sub$TP_CORR)
sub$TP_CORR
sub$TP_CORR <- as.factor(as.character(sub$TP_CORR))
sub$TP_CORR
sub$TP_CORR <- factor(as.character(sub$TP_CORR))
sub$TP_CORR
sub$TP_CORR <- factor(sub$TP_CORR)
sub$TP_CORR
class(sub$TP_CORR)
levels(sub$TP_CORR)
levels(sub$TP_CORR) <- droplevels(sub$TP_CORR)
levels(sub$TP_CORR)
droplevels(sub$TP_CORR)
factor(sub$TP_CORR)
levels(droplevels(sub$TP_CORR))
levels(sub$TP_CORR)
sub$TP_CORR <- droplevels(sub$TP_CORR)
sub$TP_CORR
source('~/.active-rstudio-document')
levels(sub$TP_CORR)
plot(sub$PERC_SUCATA ~ jitter(as.numeric(sub$TP_CORR)), pch=19, col='red', cex=1.5, xlab=NA, ylab="% sucata")
title("Percentual de sucata por tipo de aço")
y<-c(1,2,3)
rm(y)
plot(sub$PERC_SUCATA ~ jitter(as.numeric(sub$TP_CORR)), pch=19, col='red', cex=1.5, xlab=NA, ylab="% sucata", xaxt='n')
title("Percentual de sucata por tipo de aço")
axis(side=1, at=c(1, 2, 3), labels=c("um", "dois", "três"))
axis(side=1, at=c(1, 2, 3, 4), labels=c("um", "dois", "três", "quatro"))
as.numeric(sub$TP_CORR)
table(sub$tp_corr, as.numeric(sub$tp_corr))
table(sub$TP_CORR, as.numeric(sub$TP_CORR))
?prop.test
?for
?Seq
?seq
i <- seq(from=13, to=20, by=0.1)
i
banda <- 1.0
for(x in i){
x}
print(x)
for(x in i){
print(x)
}
intervalo <- c(13.0, 14.0)
intervalo[1]
intervalo[2]
sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2]
table(sub%TP_CORR, sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2])
table(sub$TP_CORR, sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2])
table(sub$TP_CORR, sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2])[2]
table(sub$TP_CORR, sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2])[[1]]
table(sub$TP_CORR, sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2])[[2]]
table(sub$TP_CORR, sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2])
TRUE == 1
table(sub$TP_CORR, as.numeric(sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2]))
tapply(as.numeric(sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2]), sub$TP_CORR, sum)
tapply(as.numeric(sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2]), sub$TP_CORR, sum)[1]
tapply(as.numeric(sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2]), sub$TP_CORR, sum)$values
tapply(as.numeric(sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2]), sub$TP_CORR, sum)
tapply(as.numeric(sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2]), sub$TP_CORR, sum)[,:]
tapply(as.numeric(sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2]), sub$TP_CORR, sum)[,1]
names(tapply(as.numeric(sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2]), sub$TP_CORR, sum))
tapply(as.numeric(sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2]), sub$TP_CORR, sum)
struct
structure
structure(tapply(as.numeric(sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2]), sub$TP_CORR, sum))
?structure
attributes(tapply(as.numeric(sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2]), sub$TP_CORR, sum))
attr(tapply(as.numeric(sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2]), sub$TP_CORR, sum))
dput(tapply(as.numeric(sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2]), sub$TP_CORR, sum))
summary(tapply(as.numeric(sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2]), sub$TP_CORR, sum))
tapply(as.numeric(sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2]), sub$TP_CORR, sum)
t <- tapply(as.numeric(sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2]), sub$TP_CORR, sum)
as.numeric(t)
result <- []
result <- c()
banda <- 1.0
i <- seq(from=13, to=20, by=0.1)
result <- c()
for(x in i){
intervalo <- c(i-(banda/2), i+(banda/2))
result <- rbind(c(x, as.numeric(tapply(as.numeric(sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2]), sub$TP_CORR, sum))))
}
result
banda <- 1.0
i <- seq(from=13, to=20, by=0.1)
result <- c()
for(x in i){
intervalo <- c(i-(banda/2), i+(banda/2))
result <- rbind(result, c(x, as.numeric(tapply(as.numeric(sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2]), sub$TP_CORR, sum))))
}
result
?rbind
t <- c(1, 2, 4)
t
u <- c(6,7,8)
rbind(t, u)
banda <- 1.0
i <- seq(from=13, to=20, by=0.1)
result <- c()
for(x in i){
intervalo <- c(i-(banda/2), i+(banda/2))
temp <- as.numeric(tapply(as.numeric(sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2]), sub$TP_CORR, sum)))
banda <- 1.0
i <- seq(from=13, to=20, by=0.1)
result <- c()
for(x in i){
intervalo <- c(i-(banda/2), i+(banda/2))
temp <- as.numeric(tapply(as.numeric(sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2]), sub$TP_CORR, sum))
result <- rbind(result, c(x, temp))
}
result
intervalo
banda <- 1.0
i <- seq(from=13, to=20, by=0.1)
result <- c()
for(x in i){
intervalo <- c(i-(banda/2), i+(banda/2))
temp <- as.numeric(tapply(as.numeric(sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2]), sub$TP_CORR, sum))
result <- rbind(result, c(x, temp))
rm(intervalo)
}
result
temp
banda <- 1.0
i <- seq(from=13, to=20, by=0.1)
result <- c()
for(x in i){
intervalo <- c(i-(banda/2), i+(banda/2))
temp <- as.numeric(tapply(as.numeric(sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2]), sub$TP_CORR, sum))
print(temp)
result <- rbind(result, c(x, temp))
rm(intervalo)
}
banda <- 1.0
i <- seq(from=13, to=20, by=0.1)
result <- c()
for(x in i){
intervalo <- c(x-(banda/2), x+(banda/2))
temp <- as.numeric(tapply(as.numeric(sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2]), sub$TP_CORR, sum))
print(temp)
result <- rbind(result, c(x, temp))
rm(intervalo)
}
result
plot(result)
plot(result[,2]~result[,1])
result <- rbind(result, c(x, temp))
plot(result[,2]~result[,1], pch=19, col="blue", cex=1.5)
?plot
points(result[,3]~result[,1], pch=19, col="red",  cex=1.5)
points(result[,4]~result[,1], pch=19, col="green",  cex=1.5)
points(result[,5]~result[,1], pch=19, col="cyan",   cex=1.5)
