q()
install.packages(c("BradleyTerry2", "caret", "lme4", "Matrix", "mgcv", "Rcpp"))
install.package('genalg')
install.packages("genalg")
?cat
install.packages("nnet")
install.packages("neuralnet")
rm(list=ls())
setwd("C:/Users/Public/Documents/RDataAnalysis/08_reblow")
rawData <- read.csv("qry_ressopro_global.csv", sep=";")
rawData$mes <- format(as.Date(rawData$DT_PRODC_OBTD_ACI, format="%d/%m/%Y"), format="%m")
rawData$ressopro <- (rawData$VOL_RESS > 40)
j <- table(rawData$TP_CORR)
incluir <- names(j)[j>100]
sub <- subset(rawData, subset=rawData$TP_CORR %in% incluir)
table(as.character(sub$TP_CORR))
sub$TP_CORR <- droplevels(sub$TP_CORR)
plot(sub$PERC_SUCATA ~ jitter(as.numeric(sub$TP_CORR)), pch=19, col='red', cex=1.5, xlab="Tipo de aço", ylab="% sucata", xaxt='n')
title("Percentual de sucata por tipo de aço")
axis(side=1, at=c(1, 2, 3, 4), labels=c("AA", "DR-CAS", "DR-FP", "UBC"))
table(sub$TP_CORR, as.numeric(sub$TP_CORR))
banda <- 1.0
i <- seq(from=13, to=20, by=0.1)
result <- c()
for(x in i){
intervalo <- c(x-(banda/2), x+(banda/2))
temp <- as.numeric(tapply(as.numeric(sub$PERC_SUCATA > intervalo[1] & sub$PERC_SUCATA < intervalo[2]), sub$TP_CORR, sum))
result <- rbind(result, c(x, temp))
}
rm(x, banda, i, intervalo, temp)
j
rm(x, banda, i, intervalo, temp, j)
plot  (result[,2]~result[,1], pch=19, col="blue",   cex=1.5, ylab="Contagem", xlab="Meio faixa")
points(result[,3]~result[,1], pch=19, col="red",    cex=1.5)
points(result[,4]~result[,1], pch=19, col="green",  cex=1.5)
points(result[,5]~result[,1], pch=19, col="cyan",   cex=1.5)
title("Contagem de corridas por faixa de sucata")
legend(x=13, y=0, legend=c("AA", "DR-CAS", "DR-FP", "UBC"), col=c("blue", "red", "green", "cyan"), pch=19)
legend(x=13, y=100, legend=c("AA", "DR-CAS", "DR-FP", "UBC"), col=c("blue", "red", "green", "cyan"), pch=19)
legend(x=13, y=100, legend=c("AA", "DR-CAS", "DR-FP", "UBC"), col=c("blue", "red", "green", "cyan"), pch=19, cex=0.5)
legend(x=13, y=120, legend=c("AA", "DR-CAS", "DR-FP", "UBC"), col=c("blue", "red", "green", "cyan"), pch=19, cex=0.5)
legend(x=13, y=125, legend=c("AA", "DR-CAS", "DR-FP", "UBC"), col=c("blue", "red", "green", "cyan"), pch=19, cex=0.5)
legend(x=13, y=115, legend=c("AA", "DR-CAS", "DR-FP", "UBC"), col=c("blue", "red", "green", "cyan"), pch=19, cex=0.5)
plot  (result[,2]~result[,1], pch=19, col="blue",   cex=1.5, ylab="Contagem", xlab="Meio faixa")
points(result[,3]~result[,1], pch=19, col="red",    cex=1.5)
points(result[,4]~result[,1], pch=19, col="green",  cex=1.5)
points(result[,5]~result[,1], pch=19, col="cyan",   cex=1.5)
title("Contagem de corridas por faixa de sucata")
legend(x=13, y=115, legend=c("AA", "DR-CAS", "DR-FP", "UBC"), col=c("blue", "red", "green", "cyan"), pch=19, cex=0.5)
result
result[1]
result[,1]
result[1,]
result[71,]
result[71,2:end]
result[71,-1]
length(result)
nrow(result)
min(result[71,-1])
lista <- []
lista <- c()
for(i in seq(from=1, to=nrow(result)) ){
lista <- rbind(lista, c(result[i,1], min(result[i, -1])))
## http://mathesaurus.sourceforge.net/octave-r.html
}
lista
plot(lista[,1]~lista[,2], pch=19, col="black", cex=1.5)
plot(lista[,2]~lista[,1], pch=19, col="black", cex=1.5)
plot(lista[,2]~lista[,1], pch=19, col="black", cex=1.5, xlab="Percentual sucata, %", ylab="Familia com menos corridas")
title("Tamanho do menor grupo por percentul de sucata ")
rm(i)
lista
result[result[,1]==13.4]
result[result[,1]==16.6]
familias <- c("AA", "DR-CAS", "DR-FP", "UBC")
resumo <- rbind(result[result[,1]==13.4], result[result[,1]==13.4])
names(resumo) <- c("perc", familias)
resumo
rm(resumo)
resumo <- rbind(result[result[,1]==13.4], result[result[,1]==13.4])
resumo <- data.frame(rbind(result[result[,1]==13.4], result[result[,1]==13.4]))
names(resumo) <- c("perc", familias)
resumo
resumo <- data.frame(rbind(result[result[,1]==13.4], result[result[,1]==16.6]))
names(resumo) <- c("perc", familias)
resumo
banda <- 1.0
baixa <- c(13.4-(banda/2), 13.4+(banda/2))
baixa
alta  <- c(16.6-(banda/2), 16.6+(banda/2))
alta
b <- c(13.4-(banda/2), 13.4+(banda/2))
a <- c(16.6-(banda/2), 16.6+(banda/2))
rm(baixa, alta)
?subset
baixa <- subset(sub, subset=(sub$PER_SUCATA > b[1] & sub$PER_SUCATA < b[2]) )
b[1]
b[2]
baixa <- subset(sub, subset=(sub$PER_SUCATA > b[1] | sub$PER_SUCATA < b[2]) )
baixa <- subset(sub, subset=(sub$PER_SUCATA > b[1] & sub$PER_SUCATA < b[2]) )
sub
baixa <- subset(sub, subset=sub$PER_SUCATA > b[1] & sub$PER_SUCATA < b[2] )
baixa
class(sub$PERC_SUCATA)
baixa <- subset(sub, subset=sub$PERC_SUCATA > b[1] & sub$PERC_SUCATA < b[2] )
alta  <- subset(sub, subset=sub$PERC_SUCATA > a[1] & sub$PERC_SUCATA < a[2] )
baixa
rm(a, b)
rm(a, b, banda)
?prop.test
names(alta)
na <- nrow(alta)
nb <- nrow(baixa)
pa <- sum(as.numeric(alta$ressopro))
pb <- sum(as.numeric(baixa$ressopro))
prop.test(x=c(pa, pb), n=c(na, nb))
pa/na
pb/nb
test <- prop.test(x=c(pa, pb), n=c(na, nb))
display(test)
print(test)
summary(test)
test$conf.int
test$conf.int[1]
test$conf.int[,]
test$conf.int[,1]
test$conf.int[2]
test$conf.int[3]
alta
alta$TP_CORR
alta$TP_CORR=="UBC"
na <- nrow(alta[alta$TP_CORR != "UBC"])
na <- nrow(alta[alta$TP_CORR ~= "UBC"])
alta$TP_CORR != "UBC"
alta[alta$TP_CORR != "UBC"]
alta[alta$TP_CORR == "UBC"]
alta(alta$TP_CORR != "UBC")
alta
alta[2]
alta[1,]
alta$TP_CORR != UBC
alta$TP_CORR != "UBC"
index
find
find(alta$TP_CORR != "UBC")
i
in
na <- nrow( subset(alta, alta$TP_CORR != "UBC") )
nb <- nrow( subset(baixa, alta$TP_CORR != "UBC") )
pa <- sum(as.numeric(subset(alta,  alta$TP_CORR != "UBC")$ressopro))
pb <- sum(as.numeric(subset(baixa, alta$TP_CORR != "UBC")$ressopro))
test2 <- prop.test(x=c(pa, pb), n=c(na, nb))
na
nb
nb <- nrow( subset(baixa, baixa$TP_CORR != "UBC") )
pa <- sum(as.numeric(subset(alta,  alta$TP_CORR != "UBC")$ressopro))
pb <- sum(as.numeric(subset(baixa, baixa$TP_CORR != "UBC")$ressopro))
test2 <- prop.test(x=c(pa, pb), n=c(na, nb))
print(test2)
rm(na1, na2, nb1, nb2, pa1, pa2, pb1, pb2)
rm(na, nb, pa)
rm(pb)
?tapply
tapply(alta$ressopro, alta$TP_CORR, sum)
tapply(alta$ressopro, alta$TP_CORR, sum)/table(alta$resspro, alta$TP_CORR)
tapply(alta$ressopro, alta$TP_CORR, sum)/table(alta$ressopro, alta$TP_CORR)
table(alta$ressopro, alta$TP_CORR)
tapply(alta$ressopro, alta$TP_CORR, sum)/table(alta$TP_CORR)
c("alta", tapply(alta$ressopro, alta$TP_CORR, sum)/table(alta$TP_CORR))
rbind(
c("alta",  tapply(alta$ressopro, alta$TP_CORR, sum)/table(alta$TP_CORR))
c("baixa", tapply(baixa$ressopro, baixa$TP_CORR, sum)/table(baixa$TP_CORR))
rbind(
c("alta",  tapply(alta$ressopro, alta$TP_CORR, sum)/table(alta$TP_CORR)),
c("baixa", tapply(baixa$ressopro, baixa$TP_CORR, sum)/table(baixa$TP_CORR))
)
rbind(
c("alta",  round(tapply(alta$ressopro, alta$TP_CORR, sum)/table(alta$TP_CORR)), 3),
c("baixa", tapply(baixa$ressopro, baixa$TP_CORR, sum)/table(baixa$TP_CORR))
)
rbind(
c("alta",  tapply(alta$ressopro, alta$TP_CORR, sum)/table(alta$TP_CORR))),
c("baixa", tapply(baixa$ressopro, baixa$TP_CORR, sum)/table(baixa$TP_CORR))
)
c("alta",  tapply(alta$ressopro, alta$TP_CORR, sum)/table(alta$TP_CORR)),
c("baixa", tapply(baixa$ressopro, baixa$TP_CORR, sum)/table(baixa$TP_CORR))
rbind(
c("alta",  tapply(alta$ressopro, alta$TP_CORR, sum)/table(alta$TP_CORR)),
c("baixa", tapply(baixa$ressopro, baixa$TP_CORR, sum)/table(baixa$TP_CORR))
)
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
rm(list=ls())
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
