q()
install.packages(c("BradleyTerry2", "caret", "lme4", "Matrix", "mgcv", "Rcpp"))
install.package('genalg')
install.packages("genalg")
?cat
install.packages("nnet")
install.packages("neuralnet")
rm(list=ls())
setwd("C:/Users/Public/Documents/RDataAnalysis/09_darth")
rawData <- read.csv("dardo.csv", sep=";")
names(rawData)
table(rawData$CLS_DARDO)
table(rawData$CLS_DARDO ~ rawData$SIGLA_ACO)
table(rawData$CLS_DARDO, rawData$SIGLA_ACO)
tabela <- table(rawData$SIGLA_ACO, rawData$CLS_DARDO)
class(tabela)
tabela
tabela[,1]
names(tabela)
tabela[tabela[,2] > 30 & tabela[,3]>30,1]
tabela[1,1]
tabela
tabela[1,2]
tabela <- data.frame(table(rawData$SIGLA_ACO, rawData$CLS_DARDO))
tabela
tabela <- table(rawData$SIGLA_ACO, rawData$CLS_DARDO)
tabela
names(tabela)
tabela[tabela[,1] > 30 & tabela[,3]>30,2]
tabela[tabela[,1] > 30 & tabela[,3]>30]
tabela[tabela[,1] > 30 & tabela[,2]>30]
tabela[1]
tabela[2]
struct(tabela)
?struct
??structure
structure(tabela)
str(tabela)
table$dimnames
table$chr(2)
table(rawData$SIGLA_ACO)
nrow(table(rawData$SIGLA_ACO))
271*2
?table
as.data.frame(tabela)
tabela <- table(rawData$SIGLA_ACO, rawData$CLS_DARDO, sparce=T)
tabela <- table(rawData$SIGLA_ACO ~ rawData$CLS_DARDO, sparce=T)
tabela <- table(rawData$SIGLA_ACO ~ rawData$CLS_DARDO)
dinnames(tabela)
dimnames(tabela)
dimnames(tabela)[1]
dimnames(tabela)[1,271]
dimnames(tabela)[271,1]
dimnames(tabela)[271]
dimnames(tabela)[1]
dimnames(tabela)[1][271]
dimnames(tabela)[1](271)
dimnames(tabela)(271,1)
dimnames(tabela)[271,1]
dimnames(tabela)[[271],1]
class(dimnames(tabela)[1])
siglas <- dimnames(tabela)[1]
siglas(271)
siglas
as.vector(siglas)
as.vector(siglas)[271]
(as.vector(siglas))[271]
(as.vector(siglas))[270]
(as.vector(siglas))[1]
siglas[[1]]
siglas[2]
siglas[1]
class(siglas[1])
siglas <- as.list(dimnames(tabela)[1])
siglas
siglas[271]
siglas[2]
siglas[[1]][271]
siglas <- as.list(dimnames(tabela)[[1]])
siglas[ tabela[tabela[,1] > 30 & tabela[,2]>30] ]
tabela[tabela[,1] > 30 & tabela[,2]>30]
class(tabela[tabela[,1] > 30 & tabela[,2]>30])
incluir <- class(tabela[tabela[,1] > 30 & tabela[,2]>30])
incluir
incluir <- tabela[tabela[,1] > 30 & tabela[,2]>30]
incluir
1:10(3)
1:10[3]
(1:10)
(1:10)[3]
incluir <- (1:271)[tabela[,1] > 30 & tabela[,2]>30]
incluir
indices <- (1:271)[tabela[,1] > 30 & tabela[,2]>30]
indices <- (1:271)[tabela[,1] > 30 & tabela[,2]>30]
incluir <- siglas[indices]
incluir
incluir[2]
incluir <- siglas[indices][[1]]
incluir <- siglas[indices][1]
INCLUIR
incluir
incluir <- as.char(siglas[indices])
incluir <- as.character(siglas[indices])
incluir
length(siglas)
subData <- subset(rawData, rawData$SIGLA_ACO %in% incluir)
table(subData$SIGLA_ACO, subData$CLS_DARDO)
table(subData$SIGLA_ACO, subData$CLS_DARDO, useNA = 'no')
table(subData$SIGLA_ACO, subData$CLS_DARDO, exclude=NULL)
subData$SIGLA_ACO <- droplevels(subData$SIGLA_ACO)
table(subData$SIGLA_ACO, subData$CLS_DARDO)
?z.test
test.x
test.z
testz
??test
?t.test
rm(indices)
rm(indices, siglas)
tabela
rm(tabela)
incluir
indice <- 1
td <- subset(subData, subData$SIGLA_ACO = incluir[indice])
td <- subset(subData, subData$SIGLA_ACO %in% incluir[indice])
td
tt <- t.test(subData$CONS_AL ~subData$CLS_DARDO)
summary(tt)
tt <- t.test(subData$CONS_AL[subData$CLS_DARDO=='com dardo'], subData$CONS_AL[subData$CLS_DARDO=='sem dardo'])
summary(tt)
brkdn
tt <- t.test(subData$CONS_AL ~ subData$CLS_DARDO)
tt
structure(tt)
tt
names(tt)
tt$p.value
t.test(subData$CONS_AL ~ subData$CLS_DARDO)$p.value
pvalores <- []
pvalores <- c()
for(indice in i:length(incluir)) {
td <- subset(subData, subData$SIGLA_ACO %in% incluir[indice])
pvalores <- rbind(pvalores, t.test(subData$CONS_AL ~ subData$CLS_DARDO)$p.value)
}
pvalores <- c()
for(indice in 1:length(incluir)) {
td <- subset(subData, subData$SIGLA_ACO %in% incluir[indice])
pvalores <- rbind(pvalores, t.test(subData$CONS_AL ~ subData$CLS_DARDO)$p.value)
}
plot(pvalores)
pvalores <- c()
for(indice in 1:length(incluir)) {
td <- subset(subData, subData$SIGLA_ACO %in% incluir[indice])
pvalores <- rbind(pvalores, t.test(td$CONS_AL ~ td$CLS_DARDO)$p.value)
rm(td)
}
plot(pvalores)
plot(pvalores, pch=19, col='blue', cex=1.5)
lines(y=0.05)
abline(h=0.05)
plot(pvalores, pch=19, col=(pvalues<0.05)+2, cex=1.5)
plot(pvalores, pch=19, col=(pvalores<0.05)+2, cex=1.5)
abline(h=0.05, col='red')
plot(pvalores, pch=19, col=(pvalores<0.05)+1, cex=1.5)
plot(pvalores, pch=19, col=(pvalores<0.05)+3, cex=1.5)
abline(h=0.05, col='red')
title('p-valores para o teste de igualdade para o consumo de alumínio')
plot(pvalores, pch=19, col=(pvalores<0.05)+3, cex=1.5, ylab="p-valor", xlab="Sigla")
abline(h=0.05, col='red')
title('p-valores para igualdade do consumo de alumínio')
diff <- (pvalores<0.05)
diff
incluir
indice
rm(indice)
rm(tt)
incluir[diff]
sign <- incluir[ (pvalores<0.05) ]
sign <- subset(subData, subData$SIGLA_ACO %in% incluir[(pvalores<0.05)]
)
table(sign$SIGLA_ACO, sign$CLS_DARDO)
sign$SIGLA_ACO <- droplevels(sign$SIGLA_ACO)
table(sign$SIGLA_ACO, sign$CLS_DARDO)
rm(sign)
names(rawData)
table(rawData$P_MAX)
pData <- subset(rawData, rawData$P_MAX <= 25)
table(pData$P_MAX)
pData$f.score <- (2*(pData$P)/(pData$P_MAX))-1
2*16
t <- c(1, 2, 3)
t
2*t
?%*%
??%*%
?"%*%"
pData$f.score <- (2*pData$P/pData$P_MAX))-1
pData$f.score <- (2*pData$P/pData$P_MAX)-1
class(pData$P)
class(pData$P_MAX)
pData$f.score <- (2*as.numeric(pData$P)/pData$P_MAX)-1
plot(pdata$f.score ~ jitter(pData$P_MAX), pch=19, col='red', cex=1.6)
plot(pData$f.score ~ jitter(pData$P_MAX), pch=19, col='red', cex=1.6)
plot(pData$f.score ~ jitter(as.factor(pData$P_MAX)), pch=19, col='red', cex=1.6)
plot(pData$f.score ~ jitter(pData$P_MAX), pch=19, col='red', cex=1.6, xaxt='n')
plot(pData$f.score ~ jitter(1:9), pch=19, col='red', cex=1.6, xaxt='n')
plot(pData$f.score ~ jitter(1:10), pch=19, col='red', cex=1.6, xaxt='n')
plot(pData$f.score ~ as.factor(pData$P_MAX), pch=19, col='red', cex=1.6, xaxt='n')
plot(pData$f.score ~ jitter(as.number(as.factor(pData$P_MAX))), pch=19, col='red', cex=1.6, xaxt='n')
plot(pData$f.score ~ jitter(as.numeric(as.factor(pData$P_MAX))), pch=19, col='red', cex=1.6, xaxt='n')
plot(pData$f.score ~ jitter(as.numeric(as.factor(pData$P_MAX))), pch=19, col=(pData$CLS_DARDO = "com dardo")+3, cex=1.6, xaxt='n')
plot(pData$f.score ~ jitter(as.numeric(as.factor(pData$P_MAX))), pch=19, col=(pData$CLS_DARDO == "com dardo")+3, cex=1.6, xaxt='n')
names(pData)
table(pData$CLS_DARDO)
table(rawData$CLS_DARDO, rawData$P_MAX <= 25)
rm(list=ls())
setwd("C:/Users/Public/Documents/RDataAnalysis/09_darth")
rawData <- read.csv("dardo.csv", sep=";")
names(rawData)
siglas <- as.list(dimnames(tabela)[[1]])
indices <- (1:length(siglas))[tabela[,1] > 30 & tabela[,2]>30]
tabela <- table(rawData$SIGLA_ACO, rawData$CLS_DARDO)
rm(list=ls())
setwd("C:/Users/Public/Documents/RDataAnalysis/09_darth")
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
pData$P_MAX
table(pData$P_MAX)
table(pData$P_MAX)[1]
as.factor(pData$P_MAX)
levels(as.factor(pData$P_MAX))
class(levels(as.factor(pData$P_MAX)))
pData$f.score
pData$f.score[1]
pData$P
pData$f.score[1]
pData$P[1]
pData$P_MAX[1]
pData$f.score <- 2*(as.numeric(pData$P)/pData$P_MAX)-1
pData$f.score[1]
as.numeric(pData$P[1])
pData$P[1]
rawData$P[1]
as.numerica(rawData$P[1])
as.numeric(rawData$P[1])
rm(list=ls())
source.with.encoding('~/.active-rstudio-document', encoding='UTF-8', echo=TRUE)
pData$f.score[1]
plot(pData$f.score ~ jitter(as.numeric(as.factor(pData$P_MAX))), pch=19, col=(pData$CLS_DARDO == "com dardo")+3, cex=1.6, xaxt='n', ylab='F score', xlab='[P] max')
title("[P] final em função da vedação")
axis(side=1, at=1:9, labels=familias)
legend(x=4, y=3.5, legend=c("com", "sem"), col=c(3,4))
legend(x=4, y=3.5, legend=c("com", "sem"), col=c(3,4), pch=19, cex=1.6)
legend(x=4, y=3.5, legend=c("com", "sem"), col=c(3,4), pch=19, cex=1.2)
plot(pData$f.score ~ jitter(as.numeric(as.factor(pData$P_MAX))), pch=19, col=(pData$CLS_DARDO == "sem dardo")+3, cex=1.6, xaxt='n', ylab='F score', xlab='[P] max')
title("[P] final em função da vedação")
axis(side=1, at=1:9, labels=familias)
legend(x=4, y=3.5, legend=c("com", "sem"), col=c(3,4), pch=19, cex=1.2)
abline(h=1.0, col='red')
abline(h=1.0, col='red', pch=2)
abline(h=1.0, col='red', pch=3)
abline(h=1.0, col='red', lwd=2)
histogram(pData$P[pData$P_MAX == "10"])
hist
hist(pData$P[pData$P_MAX == "10"])
?hist
hist(pData$P[pData$P_MAX == "10"], breaks=15)
hist(pData$P[pData$P_MAX == "10"], breaks=15, ylab="Frequencia", xlab="pontos", main="Histograma do [P] na RF")
abline(v=10, col='red', lwd=2)
abline(v=10, col='red', lwd=2, border='black')
hist(pData$P[pData$P_MAX == "10"], breaks=15, ylab="Frequencia", xlab="pontos", main="Histograma do [P] na RF", border='black')
table(pData$SIGLA_ACO[pData$P_MAX == "10"])
fam10 <- pData$SIGLA_ACO[pData$P_MAX == "10"]
fam10
table(fam10)
fam10 <- droplevels(fam10)
table(fam10)
